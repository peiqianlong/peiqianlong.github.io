(window.webpackJsonp=window.webpackJsonp||[]).push([[53],{690:function(a,t,s){"use strict";s.r(t);var e=s(15),n=Object(e.a)({},(function(){var a=this,t=a.$createElement,s=a._self._c||t;return s("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[s("h2",{attrs:{id:"前言"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#前言"}},[a._v("#")]),a._v(" 前言")]),a._v(" "),s("h3",{attrs:{id:"项目环境"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#项目环境"}},[a._v("#")]),a._v(" 项目环境")]),a._v(" "),s("ul",[s("li",[a._v("前端框架：js+jq+html+css")])]),a._v(" "),s("h2",{attrs:{id:"示例"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#示例"}},[a._v("#")]),a._v(" 示例")]),a._v(" "),s("p",[a._v("Vue：\n一、MVVM模式与MVC模式的区别\nMVVM即Model-View-ViewModel。\n它是将“数据模型数据双向绑定”的思想作为核心，因此在View和Model之间没有联系，通过ViewModel进行交互，而且Model和ViewModel之间的交互是双向的，因此视图的数据的变化会同时修改数据源，而数据源数据的变化也会立即反应到View上。\nVue是以数据为驱动的，Vue自身将DOM和数据进行绑定，一旦创建绑定，DOM和数据将保持同步，每当数据发生变化，DOM会跟着变化。 ViewModel是Vue的核心，它是Vue的一个实例。Vue实例时作用域某个HTML元素上的，这个HTML元素可以是body，也可以是某个id所指代的元素。 DOM Listeners和Data Bindings是实现双向绑定的关键。DOM Listeners监听页面所有View层DOM元素的变化，当发生变化，Model层的数据随之变化；Data Bindings监听Model层的数据，当数据发生变化，View层的DOM元素随之变化。 \nMVC即Model-View-Controller\nMVC是比较直观的架构模式，用户操作->View（负责接收用户的输入操作）->Controller（业务逻辑处理）->Model（数据持久化）->View（将结果反馈给View）。")]),a._v(" "),s("p",[a._v("二、v-show与v-if的区别 \n条件渲染指令，与v-if不同的是，无论v-show的值为true或false，元素都会存在于HTML代码中；而只有当v-if的值为true，元素才会存在于HTML代码中。v-show指令只是设置了元素CSS的style值")]),a._v(" "),s("p",[a._v("三、如何让css只在当前组件中起作用")]),a._v(" "),s("p",[a._v("在每一个vue组件中都可以定义各自的css，js，如果希望组件内写的css只对当前组件起作用，只需要在style中写入scoped，即：")]),a._v(" "),s("div",{staticClass:"language-css line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-css"}},[s("code",[a._v("<style scoped></style> \n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br")])]),s("p",[a._v("四、指令keep-alive \n在vue-router写着keep-alive，keep-alive的含义： 如果把切换出去的组件保留在内存中，可以保留它的状态或避免重新渲染。为此可以添加一个keep-alive指令")]),a._v(" "),s("div",{staticClass:"language-html line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-html"}},[s("code",[a._v("  "),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("<")]),a._v("component")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[a._v(":is")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("'")]),a._v("curremtView"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("'")])]),a._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[a._v("keep-alive")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(">")])]),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("</")]),a._v("component")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(">")])]),a._v("\n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br")])]),s("p",[a._v("五、Vue.js与其他框架的区别？\n1.与AngularJS的区别\n相同点：\n都支持指令：内置指令和自定义指令。\n都支持过滤器：内置过滤器和自定义过滤器。\n都支持双向数据绑定。\n都不支持低端浏览器。\n不同点：\n（1）.AngularJS的学习成本高，比如增加了Dependency Injection特性，而Vue.js本身提供的API都比较简单、直观。\n（2）.在性能上，AngularJS依赖对数据做脏检查，所以Watcher越多越慢。\nVue.js使用基于依赖追踪的观察并且使用异步队列更新。所有的数据都是独立触发的。\n（3）.vue中数据放在data对象里面，angular数据绑定在$scope上面\n（4）.vue有组件化概念，angular中没有2.与React的区别\n相同点：\nReact采用特殊的JSX语法，Vue.js在组件开发中也推崇编写.vue特殊文件格式，对文件内容都有一些约定，两者都需要编译后使用。\n中心思想相同：一切都是组件，组件实例之间可以嵌套。\n都提供合理的钩子函数，可以让开发者定制化地去处理需求。\n都不内置列数AJAX，Route等功能到核心包，而是以插件的方式加载。\n在组件开发中都支持mixins的特性。\n不同点：\nReact依赖Virtual DOM,而Vue.js使用的是DOM模板。React采用的Virtual DOM会对渲染出来的结果做脏检查。\nVue.js在模板中提供了指令，过滤器等，可以非常方便，快捷地操作DOM。")]),a._v(" "),s("p",[a._v("六、Vue的双向数据绑定原理是什么？\nvue.js 是采用数据劫持结合发布者-订阅者模式的方式，通过Object.defineProperty()来劫持各个属性的setter，getter，在数据变动时发布消息给订阅者，触发相应的监听回调。")]),a._v(" "),s("p",[a._v("七、vue如何实现父子组件通信，以及非父子组件通信？\n1、父子:\n使用props：\nprops监听父组件传递过来的信息\n传递过来后，可直接引用，就如已经传递过来数据塞到data\n使用"),s("span",{staticClass:"katex"},[s("span",{staticClass:"katex-mathml"},[s("math",{attrs:{xmlns:"http://www.w3.org/1998/Math/MathML"}},[s("semantics",[s("mrow",[s("mi",[a._v("r")]),s("mi",[a._v("e")]),s("mi",[a._v("f")]),s("mi",[a._v("s")]),s("mo",[a._v(":")]),s("mi",[a._v("t")]),s("mi",[a._v("h")]),s("mi",[a._v("i")]),s("mi",[a._v("s")]),s("mi",{attrs:{mathvariant:"normal"}},[a._v(".")])],1),s("annotation",{attrs:{encoding:"application/x-tex"}},[a._v("refs:\nthis.")])],1)],1)],1),s("span",{staticClass:"katex-html",attrs:{"aria-hidden":"true"}},[s("span",{staticClass:"base"},[s("span",{staticClass:"strut",staticStyle:{height:"0.8888799999999999em","vertical-align":"-0.19444em"}}),s("span",{staticClass:"mord mathdefault",staticStyle:{"margin-right":"0.02778em"}},[a._v("r")]),s("span",{staticClass:"mord mathdefault"},[a._v("e")]),s("span",{staticClass:"mord mathdefault",staticStyle:{"margin-right":"0.10764em"}},[a._v("f")]),s("span",{staticClass:"mord mathdefault"},[a._v("s")]),s("span",{staticClass:"mspace",staticStyle:{"margin-right":"0.2777777777777778em"}}),s("span",{staticClass:"mrel"},[a._v(":")]),s("span",{staticClass:"mspace",staticStyle:{"margin-right":"0.2777777777777778em"}})]),s("span",{staticClass:"base"},[s("span",{staticClass:"strut",staticStyle:{height:"0.69444em","vertical-align":"0em"}}),s("span",{staticClass:"mord mathdefault"},[a._v("t")]),s("span",{staticClass:"mord mathdefault"},[a._v("h")]),s("span",{staticClass:"mord mathdefault"},[a._v("i")]),s("span",{staticClass:"mord mathdefault"},[a._v("s")]),s("span",{staticClass:"mord"},[a._v(".")])])])]),a._v("refs.XXX\n2、子父:\n自定义事件:\n父组件可以在使用子组件的地方直接用 v-on 来监听子组件触发的事件\n子组件"),s("span",{staticClass:"katex"},[s("span",{staticClass:"katex-mathml"},[s("math",{attrs:{xmlns:"http://www.w3.org/1998/Math/MathML"}},[s("semantics",[s("mrow",[s("mi",[a._v("e")]),s("mi",[a._v("m")]),s("mi",[a._v("i")]),s("mi",[a._v("t")]),s("mo",{attrs:{stretchy:"false"}},[a._v("(")]),s("mo",{attrs:{stretchy:"false"}},[a._v(")")]),s("mtext",[a._v("触发，父组件")])],1),s("annotation",{attrs:{encoding:"application/x-tex"}},[a._v("emit()触发，父组件")])],1)],1)],1),s("span",{staticClass:"katex-html",attrs:{"aria-hidden":"true"}},[s("span",{staticClass:"base"},[s("span",{staticClass:"strut",staticStyle:{height:"1em","vertical-align":"-0.25em"}}),s("span",{staticClass:"mord mathdefault"},[a._v("e")]),s("span",{staticClass:"mord mathdefault"},[a._v("m")]),s("span",{staticClass:"mord mathdefault"},[a._v("i")]),s("span",{staticClass:"mord mathdefault"},[a._v("t")]),s("span",{staticClass:"mopen"},[a._v("(")]),s("span",{staticClass:"mclose"},[a._v(")")]),s("span",{staticClass:"mord cjk_fallback"},[a._v("触")]),s("span",{staticClass:"mord cjk_fallback"},[a._v("发")]),s("span",{staticClass:"mord cjk_fallback"},[a._v("，")]),s("span",{staticClass:"mord cjk_fallback"},[a._v("父")]),s("span",{staticClass:"mord cjk_fallback"},[a._v("组")]),s("span",{staticClass:"mord cjk_fallback"},[a._v("件")])])])]),a._v("on()监听\n使用"),s("span",{staticClass:"katex"},[s("span",{staticClass:"katex-mathml"},[s("math",{attrs:{xmlns:"http://www.w3.org/1998/Math/MathML"}},[s("semantics",[s("mrow",[s("mi",[a._v("p")]),s("mi",[a._v("a")]),s("mi",[a._v("r")]),s("mi",[a._v("e")]),s("mi",[a._v("n")]),s("mi",[a._v("t")]),s("mtext",[a._v("：")]),s("mi",[a._v("t")]),s("mi",[a._v("h")]),s("mi",[a._v("i")]),s("mi",[a._v("s")]),s("mi",{attrs:{mathvariant:"normal"}},[a._v(".")])],1),s("annotation",{attrs:{encoding:"application/x-tex"}},[a._v("parent：\nthis.")])],1)],1)],1),s("span",{staticClass:"katex-html",attrs:{"aria-hidden":"true"}},[s("span",{staticClass:"base"},[s("span",{staticClass:"strut",staticStyle:{height:"0.8888799999999999em","vertical-align":"-0.19444em"}}),s("span",{staticClass:"mord mathdefault"},[a._v("p")]),s("span",{staticClass:"mord mathdefault"},[a._v("a")]),s("span",{staticClass:"mord mathdefault",staticStyle:{"margin-right":"0.02778em"}},[a._v("r")]),s("span",{staticClass:"mord mathdefault"},[a._v("e")]),s("span",{staticClass:"mord mathdefault"},[a._v("n")]),s("span",{staticClass:"mord mathdefault"},[a._v("t")]),s("span",{staticClass:"mord cjk_fallback"},[a._v("：")]),s("span",{staticClass:"mord mathdefault"},[a._v("t")]),s("span",{staticClass:"mord mathdefault"},[a._v("h")]),s("span",{staticClass:"mord mathdefault"},[a._v("i")]),s("span",{staticClass:"mord mathdefault"},[a._v("s")]),s("span",{staticClass:"mord"},[a._v(".")])])])]),a._v("parent.XXX\n3、非父子:\n简单场景用bus，复杂场景用vuex")]),a._v(" "),s("h2",{attrs:{id:"后记"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#后记"}},[a._v("#")]),a._v(" 后记")]),a._v(" "),s("p",[a._v("目前仍在不断地探索中\n"),s("a",{attrs:{href:"https://blog.csdn.net/mlonly",target:"_blank",rel:"noopener noreferrer"}},[a._v("链接去博主的csdn"),s("OutboundLink")],1)])])}),[],!1,null,null,null);t.default=n.exports}}]);