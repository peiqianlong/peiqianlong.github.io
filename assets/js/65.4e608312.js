(window.webpackJsonp=window.webpackJsonp||[]).push([[65],{703:function(t,a,r){"use strict";r.r(a);var s=r(15),e=Object(s.a)({},(function(){var t=this,a=t.$createElement,r=t._self._c||a;return r("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[r("h2",{attrs:{id:"前言"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#前言"}},[t._v("#")]),t._v(" 前言")]),t._v(" "),r("h3",{attrs:{id:"项目环境"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#项目环境"}},[t._v("#")]),t._v(" 项目环境")]),t._v(" "),r("ul",[r("li",[t._v("前端框架：js+jq+html+css")])]),t._v(" "),r("h2",{attrs:{id:"示例"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#示例"}},[t._v("#")]),t._v(" 示例")]),t._v(" "),r("h3",{attrs:{id:"call方法"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#call方法"}},[t._v("#")]),t._v(" call方法:")]),t._v(" "),r("p",[t._v("语法：call(thisObj，Object1,Object2...)\n定义：调用一个对象的一个方法，以另一个对象替换当前对象。\n说明：\ncall 方法可以用来代替另一个对象调用一个方法。call 方法可将一个函数的对象上下文从初始的上下文改变为由 thisObj 指定的新对象。 \n如果没有提供 thisObj 参数，那么 Global 对象被用作 thisObj。")]),t._v(" "),r("h3",{attrs:{id:"apply方法："}},[r("a",{staticClass:"header-anchor",attrs:{href:"#apply方法："}},[t._v("#")]),t._v(" apply方法：")]),t._v(" "),r("p",[t._v("语法：apply(thisObj，[argArray])\n定义：应用某一对象的一个方法，用另一个对象替换当前对象。 \n说明： \n如果 argArray 不是一个有效的数组或者不是 arguments 对象，那么将导致一个 TypeError。 \n如果没有提供 argArray 和 thisObj 任何一个参数，那么 Global 对象将被用作 thisObj， 并且无法被传递任何参数。")]),t._v(" "),r("h2",{attrs:{id:"后记"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#后记"}},[t._v("#")]),t._v(" 后记")]),t._v(" "),r("p",[t._v("目前仍在不断地探索中\n"),r("a",{attrs:{href:"https://blog.csdn.net/mlonly",target:"_blank",rel:"noopener noreferrer"}},[t._v("链接去博主的csdn"),r("OutboundLink")],1)])])}),[],!1,null,null,null);a.default=e.exports}}]);