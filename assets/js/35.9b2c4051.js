(window.webpackJsonp=window.webpackJsonp||[]).push([[35],{670:function(n,p,s){"use strict";s.r(p);var e=s(15),l=Object(e.a)({},(function(){var n=this,p=n.$createElement,s=n._self._c||p;return s("ContentSlotsDistributor",{attrs:{"slot-key":n.$parent.slotKey}},[s("h2",{attrs:{id:"前言"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#前言"}},[n._v("#")]),n._v(" 前言")]),n._v(" "),s("h3",{attrs:{id:"项目环境"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#项目环境"}},[n._v("#")]),n._v(" 项目环境")]),n._v(" "),s("ul",[s("li",[n._v("前端框架：js+jq+html+css")])]),n._v(" "),s("h2",{attrs:{id:"示例"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#示例"}},[n._v("#")]),n._v(" 示例")]),n._v(" "),s("p",[n._v("Gulp使用教程\n⦁    简介\ngulp是前端开发过程中对代码进行构建的工具，是自动化项目的构建利器；她不仅能对网站资源进行优化，而且在开发过程中很多重复的任务能够使用正确的工具自动完成；使用她，我们不仅可以很愉快的编写代码，而且大大提高我们的工作效率。\ngulp是基于Nodejs的自动任务运行器，她能自动化地完成 javascript/coffee/sass/less/html/image/css 等文件的的测试、检查、合并、压缩、格式化、浏览器自动刷新、部署文件生成，并监听文件在改动后重复指定的这些步骤。在实现上，她借鉴了Unix操作系统的管道（pipe）思想，前一级的输出，直接变成后一级的输入，使得在操作上非常简单。\ngulp 和 grunt 非常类似，但相比于 grunt 的频繁 IO 操作，gulp 的流操作，能更快地更便捷地完成构建工作。")]),n._v(" "),s("p",[n._v("⦁    安装nodejs\n2.1、说明：gulp是基于nodejs，理所当然需要安装nodejs；\n2.2、安装：打开nodejs官网（https://nodejs.org/en/），点击硕大的绿色Download按钮，它会根据系统信息选择对应版本（.msi文件）。\n注：安装完成之后注意将其配置到环境变量（系统变量path中），这样你就可以在全局范围内去使用它了")]),n._v(" "),s("p",[n._v("我的路径是在c:\\Program Files\\nodejs\\node_modules\\npm\\bin，记得把它也配置进去")]),n._v(" "),s("p",[n._v("如果想了解环境变量：进入以下地址：\nhttps://blog.csdn.net/jiang7701037/article/details/80707786")]),n._v(" "),s("p",[n._v("2.3测试：按window + r 输入cmd回车，然后输入node -v\n         然后输入npm -v  \n             如果都能打印出相应版本信息，那么说明你配置成功了")]),n._v(" "),s("p",[n._v("2.4 npm的解释：\nnpm是Node.js的包管理工具（package manager）。\n在Node.js上开发时，会用到很多别人写的JavaScript代码。如果需要使用别人写的某个包，每次都根据名称搜索一下官方网站，下载代码，解压，再使用，非常繁琐。于是一个集中管理的工具应运而生：大家都把自己开发的模块打包后放到npm官网上，如果要使用，直接通过npm安装就可以直接用，不用管代码存在哪，应该从哪下载。\n更重要的是，如果我们要使用模块A，而模块A又依赖于模块B，模块B又依赖于模块X和模块Y，npm可以根据依赖关系，把所有依赖的包都下载下来并管理起来。否则，靠我们自己手动管理，肯定既麻烦又容易出错。\nnpm已经在Node.js安装的时候顺带装好了。我们在命令提示符或者终端输入npm -v")]),n._v(" "),s("p",[n._v("⦁    必装cnpm\n因为npm安装插件是从国外服务器下载，受网络影响大，可能出现异常，如果npm的服务器在中国就好了，所以我们乐于分享的淘宝团队干了这事。\n网址：http://npm.taobao.org  \n安装：\ncmd(命令行)执行\nnpm install cnpm -g --registry=https://registry.npm.taobao.org")]),n._v(" "),s("p",[n._v("注意：安装完后最好查看其版本号cnpm -v或关闭命令提示符重新打开，安装完直接使用有可能会出现错误；\n将路径C:\\Users\\asus\\AppData\\Roaming\\npm\\node_modules\\cnpm配置到环境变量中，这样就可以在全局范围内使用cnpm命令了")]),n._v(" "),s("p",[n._v("注：cnpm跟npm用法完全一致，只是在执行命令时将npm改为cnpm（以下操作将以cnpm代替npm）。\n⦁    全局安装gulp\n在cmd(命令行)中执行 cnpm install gulp -g")]),n._v(" "),s("p",[n._v("查看是否正确安装：命令提示符执行gulp -v，出现版本号即为正确安装")]),n._v(" "),s("p",[n._v("注意配置环境变量（C:\\Users\\asus\\AppData\\Roaming\\npm\\gulp）")]),n._v(" "),s("p",[n._v("全局安装gulp的目的是：可以使用gulp命令（就跟使用npm的命令一样）")]),n._v(" "),s("p",[n._v("⦁    新建package.json文件(初始化一个项目)\n1、进入项目的目录,如：cd F:\\workspace\\gulpdemo  （这是项目目录）")]),n._v(" "),s("p",[n._v('2、创建package.json文件\n         在cmd(命令行)执行：cnpm init， 一路回车，就会在项目的文件夹下产生一个package.json文件\n \n在路径下会形成这样的一个.json文件（部分内容为后添加的）\n{\n  "name": "gulptest",//项目名称（必须）不能有大写\n  "version": "0.0.1",//项目版本（必须）\n  "description": "这是一个gulp的测试程序",//项目描述（必须）\n"homepage": "",   //项目主页\n  "main": "index.js",//入口文件\n  "scripts": {\n    "test": "echo "Error: no test specified" && exit 1"\n  },\n  "keywords": [//关键词\n    "gulp"\n  ],\n  "author": "wuxunxun007",//作者\n  "license": "ISC"//项目许可协议\n"devDependencies": {    //项目依赖的插件\n    "gulp": "^3.8.11",\n    "gulp-less": "^3.0.0"\n  }')]),n._v(" "),s("p",[n._v("}\n查看package.json帮助文档，命令提示符执行cnpm help package.json\n⦁    本地安装gulp(在项目目录下安装gulp)：\n此步骤的目的是：把gulp里的所有的js文件从服务器上下载到项目目录下（node_modules）")]),n._v(" "),s("p",[n._v("1）、把当前目录转到项目目录：cd  项目目录，或者在项目目录下，按住shift键，同时点击鼠标右键，选择“在此处打开命令行”\n  2）、在cmd(命令行)执行：cnpm install gulp --save-dev")]),n._v(" "),s("p",[n._v('安装完成后，就会在项目目录下产生一个node_modules文件\n⦁    使用gulp。\n必须在项目的根目录先建立 gulpfile.js文件。在这个js文件中写上js代码，就可以使用。\n如下会有：复制文件的功能，那么就写出个复制文件功能的任务。\n⦁    复制文件\n1.1复制页面\n⦁    在根目录下创建一个index.html写一点内容，\n \n⦁    在gulpfile.js写入下代码：\nvar gulp = require("gulp");')]),n._v(" "),s("p",[n._v('gulp.task("copy-html",function(){\n    //gulp.src("index.html").pipe(gulp.dest("dist"));\n    gulp.src("index.html")\n    .pipe(gulp.dest("D:\\phpStudy\\WWW\\web180506\\day33"));\n});')]),n._v(" "),s("p",[n._v("⦁    在命令行末执行gulp  copy-html  那么我们就会在D:\\phpStudy\\WWW\\web180506\\day33目录下面发现index.html文件，说明复制成功")]),n._v(" "),s("p",[n._v("注：\n要复制项目的所有文件和文件夹（包括子文件夹，不管有多少级）有两种\n1)    “./"),s("strong",[n._v("/"),s("em",[n._v("”  当前路径用 “.”表示\n2)    “")]),n._v("/")]),n._v("/"),s("em",[n._v("”\n3)     “css/**/")]),n._v("”  把css文件夹下的所有的内容（包括子文件夹，不管有多少级）\ngulp.task('copyallfile',function(){\n    gulp.src('"),s("em",[n._v("/**/")]),n._v("')\n    .pipe(gulp.dest('D:\\phpStudy\\WWW\\day32test'));\n});")]),n._v(" "),s("p",[n._v("1.2 拷贝图片文件images\n \n修改gulpfile.js\n复制imges文件加下的所有jpg文件\n \n执行命令 gulp images\n在dist/images下有这样三个文件\n \n复制images文件加下的所有jpg和png文件\n \n执行命令")]),n._v(" "),s("p",[n._v("复制images文件加下的所有文件\n \n执行命令")]),n._v(" "),s("p",[n._v("1.3 同时拷贝两个文件夹,拷贝到dist文件夹下的data中\n \n修改gulpfile.js\n \n执行命令gulp data")]),n._v(" "),s("p",[n._v("1.4 拷贝文件时过滤文件,在json文件中新建一个json为test.json， \n然后修改gulpfile.js\n \n请手工删除dist/data文件下的文件\n \n执行命令\n \n我们发现，并没有把test.json拷贝进来")]),n._v(" "),s("p",[n._v("1.5如何将以上命令一次性执行，采用bulid命令\n \n执行命令")]),n._v(" "),s("p",[n._v("⦁    本地安装gulp插件\ngulp本身只做一些文件的拷贝，监视等等，但是它提供了很多的接口，由插件完成更多对应的任务，如：sass文件的编译，合并文件，压缩文件，优化图片的尺寸，创建本地的开发服务器。下面先介绍常用的，更多的可以找gulp的插件。")]),n._v(" "),s("p",[n._v("2.1 合并文件\n安装命令 cnpm install gulp-concat --save-dev")]),n._v(" "),s("p",[n._v("修改gulpfile.js\n \n执行命令 gulp scripts")]),n._v(" "),s("p",[n._v("2.2 合并并且压缩\n先安装uglify插件\ncnpm install gulp-uglify --save-dev")]),n._v(" "),s("p"),n._v(" "),s("p",[n._v("2.3 合并并且压缩,重新起名字\n先安装插件rename\n cnpm install gulp-rename --save-dev")]),n._v(" "),s("p"),n._v(" "),s("p",[n._v("2.4 压缩css\n先安装插件：\n cnpm install gulp-minify-css --save-dev")]),n._v(" "),s("p",[n._v("重新起名字：")]),n._v(" "),s("p",[n._v("2.5 压缩图片\n先安装插件 imagemin\ncnpm install gulp-imagemin --save-dev")]),n._v(" "),s("p",[n._v("Pipe就是管道\n解释：gulp.src()  是读取将要处理的文件，即源文件\n      pipe() 管道，是如何处理该文件（如：sass编译，复制文件，压缩文件等）。\n      gulp.dest()  是处理后的文件的路径，即目的文件。")]),n._v(" "),s("p",[n._v("编译sass文件\n输入命令：cnpm install gulp-sass --save-dev\n 安装sass插件， --save-dev表示安装到开发依赖里。\n \n安装完成之后使用即可\n创建一个main.scss\n  \n修改gulpfile.js")]),n._v(" "),s("p",[n._v("执行命令gulp sass")]),n._v(" "),s("p",[n._v("2.6 启动服务（web服务器）\n安装插件 cnpm install gulp-connect --save-dev\n \n修改gulpfile.js\n \n执行命令 gulp server\n \n打开浏览器输入\nhttp://localhost:8080/，可以查看到")]),n._v(" "),s("p",[n._v("如果需要实时更新数据，那么需要添加一个参数livereload:true")]),n._v(" "),s("p",[n._v("执行gulp命令\n然后修改index.html那么会自动更新")]),n._v(" "),s("p",[n._v("2.7实时监测文件的更新")]),n._v(" "),s("p",[n._v("⦁    新建一个任务watch\nGulpfile.js\n \n执行命令 gulp watch\n \n除非手动关闭，否则一直更新\n修改index.html\n \n打开dist文件下的index.html\n \n点击是")]),n._v(" "),s("p",[n._v("Pipe：是管道的意思，pipe的参数如果写的是一个（命令）相当于生活中的在管道里增加一个过滤器过滤纯净水一样的道理")]),n._v(" "),s("p",[n._v("常见问题：\n⦁    如果出现了cannot find module  ’***’,表示该模块没有安装成功，解决：执行cnpm install gulp ‘***’ --save-dev，就可以单独安装该模块。\n如：")]),n._v(" "),s("p",[n._v("表示，模块glob-watcher没有安装成功。执行以下命令：\ncnpm install gulp glob-watcher --save-dev。如下图：")]),n._v(" "),s("p",[n._v("十一：正在进行的项目如何用gulp:\n⦁    新建空文件夹作为项目的文件夹\n⦁    用npm初始化项目：用npm init命令产生package.json文件\n⦁    本地安装gulp\n⦁    把项目目前的所有文件拷贝的到新建的项目文件夹里\n⦁    在项目根目录下写gulpfile.js的代码。")]),n._v(" "),s("h2",{attrs:{id:"后记"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#后记"}},[n._v("#")]),n._v(" 后记")]),n._v(" "),s("p",[n._v("目前仍在不断地探索中\n"),s("a",{attrs:{href:"https://blog.csdn.net/mlonly",target:"_blank",rel:"noopener noreferrer"}},[n._v("链接去博主的csdn"),s("OutboundLink")],1)])])}),[],!1,null,null,null);p.default=l.exports}}]);