(window.webpackJsonp=window.webpackJsonp||[]).push([[94],{733:function(t,i,n){"use strict";n.r(i);var s=n(15),r=Object(s.a)({},(function(){var t=this,i=t.$createElement,n=t._self._c||i;return n("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[n("h2",{attrs:{id:"前言"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#前言"}},[t._v("#")]),t._v(" 前言")]),t._v(" "),n("h3",{attrs:{id:"项目环境"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#项目环境"}},[t._v("#")]),t._v(" 项目环境")]),t._v(" "),n("ul",[n("li",[t._v("前端框架：js+jq+html+css")])]),t._v(" "),n("h2",{attrs:{id:"示例"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#示例"}},[t._v("#")]),t._v(" 示例")]),t._v(" "),n("p",[t._v("、一、本地创建本地文件夹\n        安装好git之后,现在本地创建一个空文件夹，并且进入该文件夹")]),t._v(" "),n("p",[t._v("$ mkdir test //创建文件夹")]),t._v(" "),n("p",[t._v("$ cd test //进入当前目录")]),t._v(" "),n("p",[t._v("1\n2\n3\n二、执行git命令\n  1、通过git init命令让新建的文件夹成为git可管理的仓库")]),t._v(" "),n("p",[t._v("$ git init\n1\n2\n  执行完这一步在test文件夹里就会看到.git文件夹，它是用来跟踪和管理版本库的，如果看不到说明.git文件是隐藏文件，解决办法，查看–>勾选隐藏的文件，这样就可以看到了。接下来将本地项目放到这个文件夹里")]),t._v(" "),n("p",[t._v("2、执行git add .将项目添加到仓库")]),t._v(" "),n("p",[t._v("$ git add .      //注意add后面有一个点，并且用空格分开\n1\n2\n  只要过程中不出现error提示，就都没什么问题，此时还可以通过git status 指令进行状态查看。")]),t._v(" "),n("p",[t._v("3、执行git commit把项目提交到仓库")]),t._v(" "),n("p",[t._v('$ git commit -m "first commit"\n1\n2\n  -m后面跟的是本次提交注释的内容，可以不写，但建议写上，不然容易报错，好了，到了这一步本地仓库创建就做好了，接下来就要连接github了')]),t._v(" "),n("p",[t._v("三、连接github\n  在连接github之前我想说的是，你首先要有github账号，并且SSH KEY是已经创建好了，因为git仓库和github仓库的连接是通过ssh加密的，还没有创建的同学可以Google一下，在这里就不详细说了，直接切入主题 \n  1、创建github仓库，点击new创建")]),t._v(" "),n("p",[t._v("2、创建好github仓库后就是与git仓库的关联了，此时打开刚才那个命令框，执行")]),t._v(" "),n("p",[t._v("$ git remote add origin https://github.com/cnjy/test.git\n1\n2\n  origin后面的地址位置")]),t._v(" "),n("p",[t._v("3、关联好之后就是讲文件push到github上了 \n  如果github仓库的文件夹时空的执行")]),t._v(" "),n("p",[t._v("$ git push -u origin master\n1\n2\n  等远程仓库里面有了内容之后，下次再从本地库上传内容的时候只需下面这样就可以了")]),t._v(" "),n("p",[t._v("$ git push origin master\n1\n2\n  不过此时会有一个坑，如果我们在创建github仓库是勾选了Initialize this repository with a README（就是创建仓库的时候自动给你创建一个README文件），此时我们就需要执行接下来的一步")]),t._v(" "),n("p",[t._v("$ git pull --rebase origin master\n1\n2\n   执行完这一步再来一遍$ git push origin master就可以了")]),t._v(" "),n("p",[t._v("到这里就结束了，打开github就可以看到我们的项目就已经传到github上面了")]),t._v(" "),n("h2",{attrs:{id:"后记"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#后记"}},[t._v("#")]),t._v(" 后记")]),t._v(" "),n("p",[t._v("目前仍在不断地探索中\n"),n("a",{attrs:{href:"https://blog.csdn.net/mlonly",target:"_blank",rel:"noopener noreferrer"}},[t._v("链接去博主的csdn"),n("OutboundLink")],1)])])}),[],!1,null,null,null);i.default=r.exports}}]);