(window.webpackJsonp=window.webpackJsonp||[]).push([[82],{720:function(s,a,t){"use strict";t.r(a);var n=t(15),r=Object(n.a)({},(function(){var s=this,a=s.$createElement,t=s._self._c||a;return t("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[t("h2",{attrs:{id:"前言"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#前言"}},[s._v("#")]),s._v(" 前言")]),s._v(" "),t("h3",{attrs:{id:"项目环境"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#项目环境"}},[s._v("#")]),s._v(" 项目环境")]),s._v(" "),t("ul",[t("li",[s._v("前端框架：js+jq+html+css")])]),s._v(" "),t("h2",{attrs:{id:"示例"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#示例"}},[s._v("#")]),s._v(" 示例")]),s._v(" "),t("div",{staticClass:"language-h line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v('在做移动端项目时，底部导航的名称和图片习惯于用json文件中引入数据。而在vue项目中，当要在<template>中动态引入图片时，若直接从json文件中导入item.src字段为\'assets/image/XX.png\'的值到:src="XXX"中时，会出现图片404的情况。\n如:\n<a href="javascript:;" v-for="item in navList">\n<img :src="item.src">\n</a>\n这么循环引入img图片，页面会报404，表明从指定的路径上去找是找不到图片的。\n如何解决呢？\n\n我们都知道，如果是import 或者 require 图片路径进来，将其保存为一个变量，然后再赋值到img标签上是没有问题的。有此可见，如果我们将json中的图片路径用import或者require的方式包装。如:src="require(\'assets/image/my.png\')"。ok，找到解决办法了。但是我们无法在json文件中使用require或import。json是一种通用的跨平台的数据传输格式，它支持的是纯数据。好在我们可以用es6的方法，把数据存储为js文件然后export出去便可。要记住的是，此方法对于src目录下而言才是管用的。这里所谓的src是指要通过webpack打包的那个根目录。用这种方法实现，开发环境和生产环境打包都可以很好配置。\n如果我们把静态图片资源存放在和src平级的目录（比如叫static）下，即不存放在webpack要打包的范围内，那么直接引入图片路径无需用import或require包装，这也是ok的。如<img src="/static/my.png" />。由于放在src目录外，它不被webpack打包进去，如此一来在部署到nginx服务器上时需要单独scp这个static目录。\n\n作者：kup\n链接：https://www.jianshu.com/p/470b0f98c8d1\n来源：简书\n简书著作权归作者所有，任何形式的转载都请联系作者获得授权并注明出处。\n')])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br"),t("span",{staticClass:"line-number"},[s._v("14")]),t("br"),t("span",{staticClass:"line-number"},[s._v("15")]),t("br")])]),t("h2",{attrs:{id:"后记"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#后记"}},[s._v("#")]),s._v(" 后记")]),s._v(" "),t("p",[s._v("目前仍在不断地探索中\n"),t("a",{attrs:{href:"https://blog.csdn.net/mlonly",target:"_blank",rel:"noopener noreferrer"}},[s._v("链接去博主的csdn"),t("OutboundLink")],1)])])}),[],!1,null,null,null);a.default=r.exports}}]);