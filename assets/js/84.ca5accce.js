(window.webpackJsonp=window.webpackJsonp||[]).push([[84],{723:function(e,t,v){"use strict";v.r(t);var s=v(15),a=Object(s.a)({},(function(){var e=this,t=e.$createElement,v=e._self._c||t;return v("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[v("h2",{attrs:{id:"前言"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#前言"}},[e._v("#")]),e._v(" 前言")]),e._v(" "),v("h3",{attrs:{id:"项目环境"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#项目环境"}},[e._v("#")]),e._v(" 项目环境")]),e._v(" "),v("ul",[v("li",[e._v("前端框架：js+jq+html+css")])]),e._v(" "),v("h2",{attrs:{id:"示例"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#示例"}},[e._v("#")]),e._v(" 示例")]),e._v(" "),v("p",[e._v("声明：这不是一篇介绍 Vue 基础知识的文章，需要熟悉 Vue 相关知识")]),e._v(" "),v("p",[e._v("主架构： vue , vue-router , vuex\nUI 框架： element ui , iview , vuetify , vux , mint-ui , vue-material , muse-ui , vant , bootstrap-vue\n服务器端渲染： node.js\n开发工具： storybook , vue-devtools , vue-loader\n测试： vue-test-utils , jest\n插件库： better-scroll , Vue.Draggable , vee-validate , vue-awesome-swiper , vue-multiselect , vue-i18n , v-charts")]),e._v(" "),v("ol",[v("li",[v("p",[e._v("架构选型演进\n如果页面比较简单，可以只用 vue\n如果需要本地路由功能，比如在单页面应用（SPA）中维持多个页面，并且可以本地控制路由跳转逻辑，这时就需要搭配使用 vue-router\n一般稍复杂的页面都会遇到一些问题：组件之间的通信问题（比如 A 组件想要改变 B 组件的数据）、跨组件数据储存与共享问题（比如多页面购物车数据存储）。 vue 本身并不能很好的解决这个问题，需要搭配使用 vuex")])]),e._v(" "),v("li",[v("p",[e._v("选择 UI 框架\n使用一个现成的 UI 框架，可以少写很多代码。")])])]),e._v(" "),v("p",[e._v("目前比较推荐的是：")]),e._v(" "),v("p",[e._v("element ui ：饿了么出品\niview ：一套很棒的 UI 框架\nvuetify ：google 材质设计的实现\nvux ：移动端 UI 框架\nmint-ui ：移动端 UI 框架\nvue-material ：另一个 google 材质设计的实现\nmuse-ui ：移动端 UI 框架\nvant ：移动端 UI 框架")]),e._v(" "),v("ol",{attrs:{start:"3"}},[v("li",[e._v("服务器端渲染\n服务器端渲染用得最多的是 nuxt.js 。")])]),e._v(" "),v("p",[e._v("nuxt.js 有目录结构、书写方式、组件集成、项目构建等的约束，整个应用中是没有 html 文件的，所有的响应 html 都是 node 动态渲染的，包括里面的元信息、 css, js 路径等。渲染过程中， nuxt.js 会根据路由，将首页所有的组件渲染成 html ，余下的页面保留原生组件的格式，在客户端渲染。")]),e._v(" "),v("p",[e._v(". 开发工具\n开发时主要会用到的工具。")]),e._v(" "),v("p",[e._v("4.1 storybook\nstorybook 为组件开发搭建了一个强大的开发环境，并提供了以下的几个功能：")]),e._v(" "),v("p",[e._v("提供了一个强大的 UI 组件管理页面，可以很便捷、清晰的分组、管理多个组件或一个组件的多个不同状态\n在自动化交互测试之外，可以很方便的进行手动交互测试，并且可以动态改变组件参数，查看视图变化\n可以将组件预览导出为静态资源，这样就可以很方便查看组件的文档和不同参数对应的不同视图\n还有一系列的插件，提供了很多额外的功能，帮助你更好的开发、测试、优化组件")]),e._v(" "),v("p",[e._v("更多参考： react、vue 组件开发利器：storybook")]),e._v(" "),v("p",[e._v("4.2 vue-devtools\n这是专门针对 vue 组件开发的 chrome 开发者工具插件，就像开发者工具的 Elements 一样，可以查看整个页面的 vue 组件树和每个组件的 data ，并且可以动态的更改 data ，然后会更新 UI 到应用上。")]),e._v(" "),v("p",[e._v("安装\n通过 chrome 应用商店安装 chrome - vuejs-devtools .")]),e._v(" "),v("p",[e._v("其他安装方式查看 vue-devtools .")]),e._v(" "),v("p",[e._v("4.3 vue-loader\n加载 .vue 单文件组件的 webpack loader。")]),e._v(" "),v("ol",{attrs:{start:"5"}},[v("li",[v("p",[e._v("测试\n一般 vue 组件的测试，会用 vue-test-utils + jest / mocha / tape / ava 。")])]),e._v(" "),v("li",[v("p",[e._v("插件库\n一些很实用的插件库：")])])]),e._v(" "),v("p",[e._v("better-scroll ： iscroll 的封装\nVue.Draggable ： Sortable 的封装\nvee-validate ：数据校验组件\nvue-awesome-swiper ： swiper 的封装\nvue-multiselect ：下拉选择组件\nvue-i18n ：国际化组件\nv-charts ： echarts 的封装")]),e._v(" "),v("h2",{attrs:{id:"后记"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#后记"}},[e._v("#")]),e._v(" 后记")]),e._v(" "),v("p",[e._v("目前仍在不断地探索中\n"),v("a",{attrs:{href:"https://blog.csdn.net/mlonly",target:"_blank",rel:"noopener noreferrer"}},[e._v("链接去博主的csdn"),v("OutboundLink")],1)])])}),[],!1,null,null,null);t.default=a.exports}}]);