(window.webpackJsonp=window.webpackJsonp||[]).push([[49],{687:function(t,r,a){"use strict";a.r(r);var n=a(15),e=Object(n.a)({},(function(){var t=this,r=t.$createElement,a=t._self._c||r;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h2",{attrs:{id:"前言"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#前言"}},[t._v("#")]),t._v(" 前言")]),t._v(" "),a("h3",{attrs:{id:"项目环境"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#项目环境"}},[t._v("#")]),t._v(" 项目环境")]),t._v(" "),a("ul",[a("li",[t._v("前端框架：js+jq+html+css")])]),t._v(" "),a("h2",{attrs:{id:"示例"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#示例"}},[t._v("#")]),t._v(" 示例")]),t._v(" "),a("p",[t._v("第一步：拉取远程代码\ngit clone \n第二步：查看本地分支和远程分支\n1、cd 到工程目录下； \n2、git branch -al 查看本地和远程的所有分支。")]),t._v(" "),a("p",[t._v("成功看到了所有的分支：其中master是本地分支，前面的星号*表示正在使用的分支 \n前面带有remotes的分支都是远程分支。")]),t._v(" "),a("p",[t._v("第三步、将远程分支与本地分支进行关联\n1、git pull origin master \n(如果你想拉到本地的dev分支上，首先git checkout -b dev，然后使用git pull origin dev，这样就将本地dev分支与远程origin/dev相绑定了）")]),t._v(" "),a("p",[t._v("这个命令是将本地分支与远程分支进行关联，并且将远程分支origin拉到本地分支master下 \n如果远程分支origin下还有子分支1.0.0.1，则使用git pull origin/1.0.0.1 master 这样就是将本地的master分支与远程的origin/1.0.0.1进行了绑定")]),t._v(" "),a("p",[t._v("2、git branch -vv \n可以看到master后面蓝色部分origin/master，说明master分支已经与origin/master绑定在一起了。 \n3、已经关联好了的代码，直接输入git pull 就可以同步了")]),t._v(" "),a("p",[t._v("第四步、上传本地代码到远程分支上\n1、git add ./abc.txt \n加入你已经修改本地文件acb.txt这里是相对路径 \n2、git commit \n使用git commit 就是将这个txt文件上传到本地分支上 \n3、git push \n这个命令的结果就是将本地分支master中commit的数据abc.txt上传到了远程绑定的master分支上了。")]),t._v(" "),a("h2",{attrs:{id:"后记"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#后记"}},[t._v("#")]),t._v(" 后记")]),t._v(" "),a("p",[t._v("目前仍在不断地探索中\n"),a("a",{attrs:{href:"https://blog.csdn.net/mlonly",target:"_blank",rel:"noopener noreferrer"}},[t._v("链接去博主的csdn"),a("OutboundLink")],1)])])}),[],!1,null,null,null);r.default=e.exports}}]);